import cv2
import numpy as np

def detect_horizon_line(image_path):
    # Lee la imagen
    image = cv2.imread(image_path)

    # Convierte la imagen a escala de grises
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Utiliza el algoritmo de Canny para detectar bordes
    canny_image = cv2.Canny(gray_image, 100, 200)

    # Utiliza la función cv2.HoughLinesP para detectar líneas
    lines = cv2.HoughLinesP(canny_image, 1, np.pi/180, 100, minLineLength=50, maxLineGap=20)

    # Filtra las líneas detectadas para obtener solo la línea del horizonte
    horizon_lines = []
    for line in lines:
        x1, y1, x2, y2 = line[0]
        if abs(y2 - y1) < 10:  # Filtra líneas con pendiente muy pequeña
            horizon_lines.append(line)

    # Dibuja la línea del horizonte en la imagen original
    for line in horizon_lines:
        x1, y1, x2, y2 = line[0]
        cv2.line(image, (x1, y1), (x2, y2), (0, 255, 0), 2)

    # Muestra la imagen con la línea del horizonte dibujada
    cv2.imshow('Horizon Line', image)
    #cv2.imshow('Escala de grises',gray_image)
    #cv2.imshow('Canny',canny_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Ejemplo de uso
detect_horizon_line('imagen.png')
